{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username for VM"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password for VM"
            }
        },
        "numberOfInstances": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 40,
            "metadata": {
                "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "VNet address preffix(ex:10.0.0.0/16)"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "subnet address preffix(ex:10.0.0.0/24)"
            }
        },
        "imageResourceID": {
            "type": "string"
        },
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": ""
        },
        "OS": {
            "type": "string",
            "defaultValue": "Ubuntu",
            "allowedValues": [
                "Ubuntu",
                "Windows"
            ],
            "metadata": {
                "description": "OS Platform for the VM"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Basic_A0",
                "Basic_A1",
                "Basic_A2",
                "Basic_A3",
                "Basic_A4",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_F2",
                "Standard_F4",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s"
            ]
        },
        "Storage Type": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS"
            ]
        },
        "newOrExistingVnet": {
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "string",
            "metadata": {
                "description": "Select if this template needs a new VNet or will reference an existing VNet"
            }
        },
        "newOrExistingVnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "New or Existing VNet Name"
            }
        },
        "newOrExistingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "New or Existing subnet Name"
            }
        },
        "existingVnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Resource group of the existing VNET"
            }
        }
    },
    "variables": {
        "Ubuntu": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS",
            "version": "latest"
        },
        "Windows": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
        },
        "imageReference": "[variables(parameters('OS'))]",
        "templatelink": "[concat('https://raw.githubusercontent.com/tsubasaxZZZ/armtemplates/master/armpoc/101-create-manyvm-use-manageddisk/', parameters('newOrExistingVnet'),'vnet.json')]"
    },
    "resources": [
        {
            "apiVersion": "2015-01-01",
            "name": "vnet-template",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('templatelink')]",
                    "contentVersion": "1.2.0.0"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[parameters('newOrExistingVnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('newOrExistingSubnetName')]"
                    },
                    "existingVnetResourceGroupName": {
                        "value": "[parameters('existingVnetResourceGroupName')]"
                    },
                    "addressPrefix": {
                        "value": "[parameters('addressPrefix')]"
                    },
                    "subnetPrefix": {
                        "value": "[parameters('subnetPrefix')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmNamePrefix'), 'VM', padLeft(copyIndex(1), 2, '0'))]",
            "apiVersion": "2016-12-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "pipLoop",
                "Microsoft.Resources/deployments/vnet-template"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmNamePrefix'), 'VM', padLeft(copyIndex(1), 2, '0')))]"
                            },
                            "subnet": {
                                "id": "[reference('vnet-template').outputs.subnet1Ref.value]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'), 'VM', padLeft(copyIndex(1), 2, '0'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), 'VM', padLeft(copyIndex(1), 2, '0'))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(parameters('vmNamePrefix'), 'VM', padLeft(copyIndex(1), 2, '0'))]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNamePrefix'), 'VM', padLeft(copyIndex(1), 2, '0')))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2016-12-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('vmNamePrefix'), 'VM', padLeft(copyIndex(1), 2, '0'))]",
            "copy": {
                "name": "pipLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        }
    ]
}